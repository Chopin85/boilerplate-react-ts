{"version":3,"sources":["components/Header/styles.module.scss","components/Drawers/styles.module.scss","components/Menu/styles.module.scss","views/App/styles.module.scss","views/ApiDemo/BooksList/styles.module.scss","views/ApiDemo/styles.module.scss","views/Demo/Counter/styles.module.scss","views/Demo/styles.module.scss","views/ApiDemo/Books/styles.module.scss","components/Header/assets/logo.svg","components/Header/index.tsx","store/counter/types.ts","store/drawer/types.ts","components/Buttons/Button.tsx","components/Buttons/CloseButton.tsx","components/Drawers/Drawer.tsx","store/drawer/actions.ts","components/Buttons/ActionButton.tsx","components/Drawers/MainDrawer.tsx","store/counter/actions.ts","components/Buttons/DrawerButton.tsx","views/Demo/Counter/index.tsx","views/Demo/index.tsx","store/api/types.ts","services/api/index.ts","services/books/index.ts","views/ApiDemo/Books/index.tsx","components/Spinner/index.tsx","views/ApiDemo/BooksList/index.tsx","store/api/actions.ts","views/ApiDemo/ApiDemo.tsx","components/Menu/index.tsx","views/App/index.tsx","serviceWorker.ts","store/counter/reducers.ts","store/drawer/reducers.ts","store/api/reducers.ts","store/index.ts","index.tsx"],"names":["module","exports","Header","className","classNames","styles","root","header","src","logo","alt","link","href","target","rel","to","INCREMENT_COUNTER","DECREMENT_COUNTER","INCREMENT_COUNTER_WITH_VALUE","DECREMENT_COUNTER_WITH_VALUE","SET_COUNTER","RESET_COUNTER","OPEN_DRAWER","CLOSE_DRAWER","Button","style","icon","onClick","text","type","CloseButton","Drawer","headerContent","content","dispatch","useDispatch","useSelector","state","drawer","isOpen","shallowEqual","open","drawerHeader","drawerContent","ActionButton","buttonText","MainDrawer","useState","value","setvalue","onChange","e","Number","currentTarget","payload","incrementCounterWithValue","decrementCounterWithValue","setCounterToValue","DrawerButton","Counter","counter","Demo","GET_BOOKS","GET_BOOKS_SUCCESS","GET_BOOKS_ERROR","apiService","get","path","disableCamelCase","fullResponse","axios","method","url","response","data","camelcaseKeys","deep","code","undefined","status","message","error","statusText","post","token","cookies","document","location","reload","headers","Authorization","put","delete","Error","bookService","getBooks","api","Book","name","Spinner","BooksList","isLoadingBooks","books","Books","map","book","listHeader","listTitl","a","ApiDemo","apiDemoHeader","apiDemoContent","Menu","ref","React","forwardRef","App","setisOpen","menuRef","useRef","useLayoutEffect","gsap","timeline","set","current","xPercent","useEffect","repeat","repeatDelay","duration","menu","menuBar","exact","component","Boolean","window","hostname","match","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qBAAqB,KAAO,qBAAqB,OAAS,uBAAuB,KAAO,qBAAqB,gBAAgB,gC,mBCAtJD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,KAAO,qBAAqB,aAAe,6BAA6B,cAAgB,gC,mBCAtID,EAAOC,QAAU,CAAC,KAAO,qBAAqB,KAAO,uB,mBCArDD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,KAAO,qBAAqB,QAAU,0B,mBCApFD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,WAAa,2BAA2B,UAAY,4B,mBCAlGD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,cAAgB,8BAA8B,eAAiB,iC,mBCA7GD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,QAAU,0B,mBCAxDD,EAAOC,QAAU,CAAC,KAAO,uB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,uB,yLCDV,MAA0B,iCCkC1BC,EAxBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,qBAAKA,UAAWC,IAAWC,IAAOC,KAAMH,GAAxC,SACE,yBAAQA,UAAWE,IAAOE,OAA1B,UACE,qBAAKC,IAAKC,EAAMN,UAAWE,IAAOI,KAAMC,IAAI,SAC5C,sCACO,+CADP,0BAGA,mBACEP,UAAWE,IAAOM,KAClBC,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,yBAQA,cAAC,IAAD,CAAMX,UAAWE,IAAOM,KAAMI,GAAG,QAAjC,uBAGA,cAAC,IAAD,CAAMZ,UAAWE,IAAOM,KAAMI,GAAG,WAAjC,4B,OCxBOC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAA+B,+BAC/BC,EAA+B,+BAC/BC,EAAc,cACdC,EAAgB,gBCLhBC,EAAc,cACdC,EAAe,eC2BbC,EAtBA,SAAC,GAA2D,IAAzDrB,EAAwD,EAAxDA,UAAWsB,EAA6C,EAA7CA,MAA6C,IAAtCC,YAAsC,MAA/B,GAA+B,EAA3BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,KACtD,MAAa,KAATF,EAEA,yBACEG,KAAK,SACL1B,UAAWA,EACXsB,MAAOA,EACPE,QAASA,EAJX,UAME,qBAAKnB,IAAG,qBAAgBkB,EAAhB,QAA4BhB,IAAI,aACvCkB,KAML,wBAAQC,KAAK,SAAS1B,UAAWA,EAAWsB,MAAOA,EAAOE,QAASA,EAAnE,SACGC,KChBQE,EAJK,SAAC,GAAwB,IAAtBH,EAAqB,EAArBA,QACrB,OAAO,cAAC,EAAD,CAAQA,QAASA,EAASC,KAAK,W,iBC2BzBG,EArBA,SAAC,GAAkD,IAAhD5B,EAA+C,EAA/CA,UAAW6B,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,QACpCC,EAAWC,cAKjB,OAFeC,aADM,SAACC,GAAD,OAAsBA,EAAMC,OAAOC,SACfC,KAOvC,0BAASrC,UAAWC,IAAWC,IAAOC,KAAMD,IAAOoC,MAAnD,UACE,sBAAKtC,UAAWE,IAAOqC,aAAvB,UACGV,EACD,cAAC,EAAD,CAAaL,QAAS,kBAAMO,ECnB3B,CACLL,KAAMN,UDoBJ,qBAAKpB,UAAWE,IAAOsC,cAAvB,SAAuCV,OATlC,yBAAS9B,UAAWC,IAAWC,IAAOC,KAAMH,MEHxCyC,EATM,SAAC,GAA0C,IAAxCjB,EAAuC,EAAvCA,QAASkB,EAA8B,EAA9BA,WAAYjB,EAAkB,EAAlBA,KAC3C,OACE,sBAAKzB,UAAU,eAAf,UACE,8BAAMyB,IACN,cAAC,EAAD,CAAQD,QAASA,EAASC,KAAMiB,QCkDvBC,EAjDI,WAAO,IAAD,EACGC,mBAAS,GADZ,mBAChBC,EADgB,KACTC,EADS,KAEjBf,EAAWC,cAMXH,EAAgB,kDAChBC,EACJ,gCACE,kDACA,uBAAOJ,KAAK,SAASqB,SARH,SAACC,GACrBF,EAASG,OAAOD,EAAEE,cAAcL,SAOgBA,MAAOA,IACrD,cAAC,EAAD,CACEH,WAAW,KACXjB,KAAK,QACLD,QAAS,kBAAMO,ECnBd,CACLL,KAAMb,ODoBJ,cAAC,EAAD,CACE6B,WAAW,KACXjB,KAAK,WACLD,QAAS,kBAAMO,EClBd,CACLL,KAAMZ,ODmBJ,cAAC,EAAD,CACE4B,WAAU,WAAMG,GAChBpB,KAAI,cAASoB,GACbrB,QAAS,kBAAMO,EClBkB,SACvCc,GAEA,MAAO,CACLnB,KAAMX,EACNoC,QAASN,GDamBO,CAA0BP,OAEpD,cAAC,EAAD,CACEH,WAAU,WAAMG,GAChBpB,KAAI,iBAAYoB,GAChBrB,QAAS,kBAAMO,ECdkB,SACvCc,GAEA,MAAO,CACLnB,KAAMV,EACNmC,QAASN,GDSmBQ,CAA0BR,OAEpD,cAAC,EAAD,CACEH,WAAU,WAAMG,GAChBpB,KAAI,iBAAYoB,GAChBrB,QAAS,kBAAMO,ECVU,SAACc,GAChC,MAAO,CACLnB,KAAMT,EACNkC,QAASN,GDOmBS,CAAkBT,OAE5C,cAAC,EAAD,CACEH,WAAW,QACXjB,KAAK,gBACLD,QAAS,kBAAMO,ECPd,CACLL,KAAMR,UDWR,OAAO,cAAC,EAAD,CAAQY,QAASA,EAASD,cAAeA,K,iBElDnC0B,EALM,WACnB,IAAMxB,EAAWC,cACjB,OAAO,cAAC,EAAD,CAAQR,QAAS,kBAAMO,EJJvB,CACLL,KAAMP,KIG8CM,KAAK,mBCoB9C+B,EAjBC,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,QAASzD,EAAuB,EAAvBA,UAC1B,OACE,sBAAKA,UAAWC,IAAWC,IAAOC,KAAMH,GAAxC,UACE,0FACA,mBACES,KAAK,yDACLC,OAAO,SACPC,IAAI,sBAHN,oBAOA,qBAAKX,UAAWE,IAAOuD,QAAvB,SAAiCA,IACjC,cAAC,EAAD,Q,iBCESC,EAZF,SAAC,GAA0B,IAAxB1D,EAAuB,EAAvBA,UAER6C,EAAQZ,aADM,SAACC,GAAD,OAAsBA,EAAMuB,QAAQA,UACjBpB,KAEvC,OACE,sBAAKrC,UAAWC,IAAWC,IAAOC,KAAMH,GAAxC,UACE,cAAC,EAAD,CAASyD,QAASZ,IAClB,cAAC,EAAD,Q,wBCAOc,EAAY,YACZC,EAAoB,oBACpBC,EAAkB,kB,mDC8EhBC,GA/FI,CACXC,IADW,SAEfC,EACAC,GAEC,IAAD,sIADAC,EACA,kDAMyBC,IAAM,CAC3BC,OAAQ,MACRC,IAAI,GAAD,OAAKL,KARZ,cAMQM,EANR,yBAaSJ,EACHI,EAASC,KACTN,EACAK,EAASC,KAAKpB,QACdqB,IAAcF,EAASC,KAAM,CAAEE,MAAM,KAjB3C,sCAmBsB,CAClBC,UAAgBC,IAAV,KAAsB,KAAML,SAASM,OAAS,IACpDC,aACYF,IAAV,KACI,KAAML,SAASC,KAAKO,MAClB,KAAMR,SAASC,KAAKO,MACpB,KAAMR,SAASS,WACjB,yBA1BV,4DA+BIC,KApCW,SAoCNhB,EAAcO,GAAY,OAAD,mHAC5BU,EAAQC,IAAQnB,IAAI,WAExBoB,SAASC,SAASC,SAHc,kBAMTlB,IAAM,CAC3BC,OAAQ,OACRC,IAAI,IAAD,OAAML,GACTsB,QAAS,CACPC,cAAc,UAAD,OAAYN,IAE3BV,SAZ8B,cAM1BD,EAN0B,yBAczBA,EAASC,MAdgB,yDAgBzB,KAAMD,SAASC,MAhBU,4DAmB9BiB,IAvDW,SAuDPxB,EAAcO,GAAY,OAAD,mHAC3BU,EAAQC,IAAQnB,IAAI,WAExBoB,SAASC,SAASC,SAHa,kBAMRlB,IAAM,CAC3BC,OAAQ,MACRC,IAAI,IAAD,OAAML,GACTsB,QAAS,CACPC,cAAc,UAAD,OAAYN,IAE3BV,SAZ6B,cAMzBD,EANyB,yBAcxBA,EAASC,MAde,yDAgBxB,KAAMD,SAASC,MAhBS,4DAmB7BkB,OA1EW,SA0EJzB,EAAcO,GAAY,OAAD,mHAC9BU,EAAQC,IAAQnB,IAAI,WAExBoB,SAASC,SAASC,SAHgB,kBAMXlB,IAAM,CAC3BC,OAAQ,SACRC,IAAI,IAAD,OAAML,GACTsB,QAAS,CACPC,cAAc,UAAD,OAAYN,IAE3BV,SAZgC,cAM5BD,EAN4B,yBAc3BA,EAASC,KAAKpB,SAda,sCAgB5B,IAAIuC,MAAM,KAAMpB,SAASC,KAAKO,OAhBF,6DCpEzBa,GANK,CACZC,SADY,WACA,OAAD,6HACRC,GAAI9B,IAAJ,UAJS,gBAGD,+C,oBCYJ+B,GARF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAM/F,EAAuB,EAAvBA,UACpB,OACE,qBAAKA,UAAWC,IAAWC,KAAOC,KAAMH,GAAxC,SACE,8BAAM+F,OCRGC,GAFC,kBAAM,qBAAK3F,IAAI,2BAA2BE,IAAI,a,oBCoC/C0F,GAxBG,SAAC,GAA0B,IAAxBjG,EAAuB,EAAvBA,UACb+B,EAAWC,cADyB,EAIRC,aADX,SAACC,GAAD,OAAsBA,EAAM2D,MACWxD,KAAtD6D,EAJkC,EAIlCA,eAAgBC,EAJkB,EAIlBA,MAElBC,EAAQF,EACZ,cAAC,GAAD,IAEAC,EAAME,KAAI,SAACC,GAAD,OAAU,cAAC,GAAD,CAAqBP,KAAMO,EAAKP,MAArBO,EAAKjC,QAGtC,OACE,sBAAKrE,UAAWC,IAAWC,KAAOC,KAAMH,GAAxC,UACE,0EACA,sBAAKA,UAAWE,KAAOqG,WAAvB,UACE,qBAAKvG,UAAWE,KAAOsG,SAAvB,mBACA,cAAC,EAAD,CAAQhF,QAAS,kBAAMO,EClB7B,uCAAO,WAAOA,GAAP,eAAA0E,EAAA,6DACL1E,EAAS,CAAEL,KAAMiC,IADZ,kBAGiBgC,GAAYC,WAH7B,OAGGO,EAHH,OAIHpE,EAAS,CAAEL,KAAMkC,EAAmBT,QAASgD,IAJ1C,gDAMHpE,EAAS,CAAEL,KAAMmC,EAAiBV,QAAQ,EAAD,KANtC,yDAAP,wDDkBqD1B,KAAK,eAErD2E,M,oBEfQM,GATC,SAAC,GAAD,IAAG1G,EAAH,EAAGA,UAAH,OACd,sBAAKA,UAAWC,IAAWC,KAAOC,KAAMH,GAAxC,UACE,qBAAKA,UAAWE,KAAOyG,cAAvB,uCACA,qBAAK3G,UAAWE,KAAO0G,eAAvB,SACE,cAAC,GAAD,U,oBCFAC,GAAO,SAAC,EAA+BC,GAAc,IAA3C9G,EAA0C,EAA1CA,UAAWwB,EAA+B,EAA/BA,QACzB,OACE,sBAAKsF,IAAKA,EAAK9G,UAAWC,IAAWC,KAAOC,KAAMH,GAAlD,UACE,cAAC,IAAD,CAAMwB,QAASA,EAASxB,UAAWE,KAAOM,KAAMI,GAAG,IAAnD,kBAGA,cAAC,IAAD,CAAMY,QAASA,EAASxB,UAAWE,KAAOM,KAAMI,GAAG,QAAnD,uBAGA,cAAC,IAAD,CAAMY,QAASA,EAASxB,UAAWE,KAAOM,KAAMI,GAAG,WAAnD,0BAMSmG,OAAMC,WAAWH,I,SCkCjBI,GA5CH,SAAC,GAA0B,IAAxBjH,EAAuB,EAAvBA,UAAuB,EACR4C,oBAAkB,GADV,mBAC7BR,EAD6B,KACrB8E,EADqB,KAG9BC,EAAUC,iBAAO,MAsBvB,OAVAC,2BAAgB,WACLC,KAAKC,WACXC,IAAIL,EAAQM,QAAS,CAAEC,UAAW,QACpC,IAEHC,qBAAU,WACHvF,EAfIkF,KAAKC,SAAS,CAAEK,OAAQ,EAAGC,YAAa,IAC9CjH,GAAGuG,EAAQM,QAAS,CAAEC,SAAU,EAAGI,SAAU,IAIvCR,KAAKC,SAAS,CAAEK,OAAQ,EAAGC,YAAa,IAC9CjH,GAAGuG,EAAQM,QAAS,CAAEC,UAAW,IAAKI,SAAU,MAWlD,CAAC1F,IAGF,qBAAKpC,UAAWC,IAAWC,IAAOC,KAAMH,GAAxC,SACE,eAAC,IAAD,WACE,qBAAKwB,QAAS,kBAAM0F,GAAU,IAAOlH,UAAWE,IAAO6H,OACvD,cAAC,GAAD,CACEjB,IAAKK,EACLnH,UAAWE,IAAO8H,QAClBxG,QAAS,kBAAM0F,GAAU,MAE3B,eAAC,IAAD,WACE,cAAC,IAAD,CAAOe,OAAK,EAACjE,KAAK,IAAIkE,UAAWnI,IACjC,cAAC,IAAD,CAAOiE,KAAK,WAAWkE,UAAWxB,KAClC,cAAC,IAAD,CAAO1C,KAAK,QAAQkE,UAAWxE,aCzCrByE,QACW,cAA7BC,OAAOhD,SAASiD,UAEe,UAA7BD,OAAOhD,SAASiD,UAEhBD,OAAOhD,SAASiD,SAASC,MACvB,2D,8BCPAC,GAA6B,CACjC9E,QAAS,GCLL8E,GAA4B,CAChCnG,QAAQ,GCAJmG,GAAyB,CAC7BrC,gBAAgB,EAChBC,MAAO,I,SCDHqC,GAAcC,2BAAgB,CAClChF,QHK4B,WAGV,IAFlBvB,EAEiB,uDAFTqG,GACRG,EACiB,uCACjB,OAAQA,EAAOhH,MACb,KAAKb,EACH,OAAO,6BAAKqB,GAAZ,IAAmBuB,QAASvB,EAAMuB,QAAU,IAC9C,KAAK3C,EACH,OAAO,6BAAKoB,GAAZ,IAAmBuB,QAASvB,EAAMuB,QAAU,IAC9C,KAAK1C,EACH,OAAO,6BAAKmB,GAAZ,IAAmBuB,QAASvB,EAAMuB,QAAUiF,EAAOvF,UACrD,KAAKnC,EACH,OAAO,6BAAKkB,GAAZ,IAAmBuB,QAASvB,EAAMuB,QAAUiF,EAAOvF,UACrD,KAAKlC,EACH,OAAO,6BAAKiB,GAAZ,IAAmBuB,QAASiF,EAAOvF,UACrC,KAAKjC,EACH,OAAOqH,GACT,QACE,OAAOrG,IGtBXC,OFA2B,WAGV,IAFjBD,EAEgB,uDAFRqG,GACRG,EACgB,uCAChB,OAAQA,EAAOhH,MACb,KAAKP,EACH,OAAO,6BAAKe,GAAZ,IAAmBE,QAAQ,IAC7B,KAAKhB,EACH,OAAO,6BAAKc,GAAZ,IAAmBE,QAAQ,IAC7B,QACE,OAAOF,IETX2D,IDCwB,WAGV,IAFd3D,EAEa,uDAFLqG,GACRG,EACa,uCACb,OAAQA,EAAOhH,MACb,KAAKiC,EACH,OAAO,6BAAKzB,GAAZ,IAAmBgE,gBAAgB,EAAMC,MAAOoC,GAAapC,QAC/D,KAAKvC,EACH,OAAO,6BAAK1B,GAAZ,IAAmBgE,gBAAgB,EAAOC,MAAOuC,EAAOvF,UAC1D,KAAKU,EACH,OAAO,6BAAK3B,GAAZ,IAAmBgE,gBAAgB,IACrC,QACE,OAAOhE,MCLEyG,GALDC,uBACZJ,GACAK,+BAAoBC,2BAAgBC,QCTtCC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFxD,SAAS+D,eAAe,SL+HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.8564dbcd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__23kHT\",\"logo\":\"styles_logo__2I-b3\",\"header\":\"styles_header__2dQfB\",\"link\":\"styles_link__3mu6n\",\"App-logo-spin\":\"styles_App-logo-spin__1stbd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__L5zOd\",\"open\":\"styles_open__3DQ8G\",\"drawerHeader\":\"styles_drawerHeader__1Y0-t\",\"drawerContent\":\"styles_drawerContent__3krhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2n2Tc\",\"link\":\"styles_link__3iS2r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__9YqiB\",\"menu\":\"styles_menu__3-PTb\",\"menuBar\":\"styles_menuBar__kuWHT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2dEU2\",\"listHeader\":\"styles_listHeader__2-fhM\",\"listTitle\":\"styles_listTitle__1yHPD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2GWQA\",\"apiDemoHeader\":\"styles_apiDemoHeader__15J0w\",\"apiDemoContent\":\"styles_apiDemoContent__3eznN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__1toge\",\"counter\":\"styles_counter__2lr0b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__1b77Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__1kWxC\"};","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './styles.module.scss';\nimport classNames from 'classnames';\nimport logo from './assets/logo.svg';\n\ninterface Props {\n  className?: string;\n}\n\nconst Header = ({ className }: Props) => (\n  <div className={classNames(styles.root, className)}>\n    <header className={styles.header}>\n      <img src={logo} className={styles.logo} alt=\"logo\" />\n      <p>\n        Edit <code>src/App.tsx</code> and save to reload.\n      </p>\n      <a\n        className={styles.link}\n        href=\"https://reactjs.org\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Learn React\n      </a>\n      <Link className={styles.link} to=\"/demo\">\n        Demo Page\n      </Link>\n      <Link className={styles.link} to=\"/apidemo\">\n        API demo\n      </Link>\n    </header>\n  </div>\n);\nexport default Header;\n","export interface CounterState {\n  counter: number;\n}\n\nexport const INCREMENT_COUNTER = 'INCREMENT_COUNTER';\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER';\nexport const INCREMENT_COUNTER_WITH_VALUE = 'INCREMENT_COUNTER_WITH_VALUE';\nexport const DECREMENT_COUNTER_WITH_VALUE = 'DECREMENT_COUNTER_WITH_VALUE';\nexport const SET_COUNTER = 'SET_COUNTER';\nexport const RESET_COUNTER = 'RESET_COUNTER';\n\ninterface IncrementCounterAction {\n  type: typeof INCREMENT_COUNTER;\n}\ninterface DecrementCounterAction {\n  type: typeof DECREMENT_COUNTER;\n}\n\ninterface IncrementCounterWithValue {\n  type: typeof INCREMENT_COUNTER_WITH_VALUE;\n  payload: number;\n}\ninterface DecrementCounterWithValue {\n  type: typeof DECREMENT_COUNTER_WITH_VALUE;\n  payload: number;\n}\ninterface setCounterToValue {\n  type: typeof SET_COUNTER;\n  payload: number;\n}\ninterface ResetCounterAction {\n  type: typeof RESET_COUNTER;\n}\n\nexport type CounterActionTypes =\n  | IncrementCounterAction\n  | DecrementCounterAction\n  | IncrementCounterWithValue\n  | DecrementCounterWithValue\n  | setCounterToValue\n  | ResetCounterAction;\n","export interface DrawerState {\n  isOpen: boolean;\n}\n\nexport const OPEN_DRAWER = 'OPEN_DRAWER';\nexport const CLOSE_DRAWER = 'CLOSE_DRAWER';\n\ninterface openDrawer {\n  type: typeof OPEN_DRAWER;\n}\ninterface closeDrawer {\n  type: typeof CLOSE_DRAWER;\n}\n\nexport type DrawerActionTypes = openDrawer | closeDrawer;\n","import React from 'react';\n\ninterface Props {\n  className?: string;\n  style?: Object;\n  icon?: string;\n  onClick: () => void;\n  text: string;\n}\n\nconst Button = ({ className, style, icon = '', onClick, text }: Props) => {\n  if (icon !== '') {\n    return (\n      <button\n        type=\"button\"\n        className={className}\n        style={style}\n        onClick={onClick}\n      >\n        <img src={`assets/img/${icon}.svg`} alt=\"pageIcon\" />\n        {text}\n      </button>\n    );\n  }\n\n  return (\n    <button type=\"button\" className={className} style={style} onClick={onClick}>\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\n\ninterface Props {\n  onClick: () => void;\n}\n\nconst CloseButton = ({ onClick }: Props) => {\n  return <Button onClick={onClick} text=\"Close\" />;\n};\n\nexport default CloseButton;\n","import React from 'react';\nimport { closeDrawer } from '../../store/drawer/actions';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { RootState } from 'store/index';\nimport CloseButton from '../Buttons/CloseButton';\nimport styles from './styles.module.scss';\nimport classNames from 'classnames';\n\ninterface Props {\n  content: any;\n  headerContent: any;\n  className?: string;\n}\n\nconst Drawer = ({ className, headerContent, content }: Props) => {\n  const dispatch = useDispatch();\n\n  const selectIsOpen = (state: RootState) => state.drawer.isOpen;\n  const isOpen = useSelector(selectIsOpen, shallowEqual);\n\n  if (!isOpen) {\n    return <section className={classNames(styles.root, className)} />;\n  }\n\n  return (\n    <section className={classNames(styles.root, styles.open)}>\n      <div className={styles.drawerHeader}>\n        {headerContent}\n        <CloseButton onClick={() => dispatch(closeDrawer())} />\n      </div>\n      <div className={styles.drawerContent}>{content}</div>\n    </section>\n  );\n};\n\nexport default Drawer;\n","import { OPEN_DRAWER, CLOSE_DRAWER, DrawerActionTypes } from './types';\n\nexport const openDrawer = (): DrawerActionTypes => {\n  return {\n    type: OPEN_DRAWER\n  };\n};\n\nexport const closeDrawer = (): DrawerActionTypes => {\n  return {\n    type: CLOSE_DRAWER\n  };\n};\n","import React from 'react';\nimport Button from './Button';\n\ninterface Props {\n  onClick: () => void;\n  buttonText: string;\n  text: string;\n}\n\nconst ActionButton = ({ onClick, buttonText, text }: Props) => {\n  return (\n    <div className=\"actionButton\">\n      <div>{text}</div>\n      <Button onClick={onClick} text={buttonText} />\n    </div>\n  );\n};\n\nexport default ActionButton;\n","import React, { useState } from 'react';\nimport {\n  incrementCounter,\n  decrementCounter,\n  incrementCounterWithValue,\n  decrementCounterWithValue,\n  setCounterToValue,\n  resetCounter\n} from '../../store/counter/actions';\nimport { useDispatch } from 'react-redux';\n\nimport Drawer from './Drawer';\nimport ActionButton from '../Buttons/ActionButton';\n\nconst MainDrawer = () => {\n  const [value, setvalue] = useState(0);\n  const dispatch = useDispatch();\n\n  const onChangeValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setvalue(Number(e.currentTarget.value));\n  };\n\n  const headerContent = <div>Counter actions</div>;\n  const content = (\n    <div>\n      <div>Enter a value :</div>\n      <input type=\"number\" onChange={onChangeValue} value={value} />\n      <ActionButton\n        buttonText=\"+1\"\n        text=\"Add 1\"\n        onClick={() => dispatch(incrementCounter())}\n      />\n      <ActionButton\n        buttonText=\"-1\"\n        text=\"Remove 1\"\n        onClick={() => dispatch(decrementCounter())}\n      />\n      <ActionButton\n        buttonText={`+${value}`}\n        text={`Add ${value}`}\n        onClick={() => dispatch(incrementCounterWithValue(value))}\n      />\n      <ActionButton\n        buttonText={`+${value}`}\n        text={`Remove ${value}`}\n        onClick={() => dispatch(decrementCounterWithValue(value))}\n      />\n      <ActionButton\n        buttonText={`=${value}`}\n        text={`Set to ${value}`}\n        onClick={() => dispatch(setCounterToValue(value))}\n      />\n      <ActionButton\n        buttonText=\"Reset\"\n        text=\"Reset counter\"\n        onClick={() => dispatch(resetCounter())}\n      />\n    </div>\n  );\n\n  return <Drawer content={content} headerContent={headerContent} />;\n};\n\nexport default MainDrawer;\n","import {\n  INCREMENT_COUNTER,\n  DECREMENT_COUNTER,\n  INCREMENT_COUNTER_WITH_VALUE,\n  DECREMENT_COUNTER_WITH_VALUE,\n  RESET_COUNTER,\n  SET_COUNTER,\n  CounterActionTypes\n} from './types';\n\nexport const incrementCounter = (): CounterActionTypes => {\n  return {\n    type: INCREMENT_COUNTER\n  };\n};\n\nexport const decrementCounter = (): CounterActionTypes => {\n  return {\n    type: DECREMENT_COUNTER\n  };\n};\n\nexport const incrementCounterWithValue = (\n  value: number\n): CounterActionTypes => {\n  return {\n    type: INCREMENT_COUNTER_WITH_VALUE,\n    payload: value\n  };\n};\n\nexport const decrementCounterWithValue = (\n  value: number\n): CounterActionTypes => {\n  return {\n    type: DECREMENT_COUNTER_WITH_VALUE,\n    payload: value\n  };\n};\n\nexport const setCounterToValue = (value: number): CounterActionTypes => {\n  return {\n    type: SET_COUNTER,\n    payload: value\n  };\n};\n\nexport const resetCounter = (): CounterActionTypes => {\n  return {\n    type: RESET_COUNTER\n  };\n};\n","import React from 'react';\nimport { openDrawer } from '../../store/drawer/actions';\nimport { useDispatch } from 'react-redux';\nimport Button from './Button';\n\nconst DrawerButton = () => {\n  const dispatch = useDispatch();\n  return <Button onClick={() => dispatch(openDrawer())} text=\"Open Drawer !\" />;\n};\n\nexport default DrawerButton;\n","import React from 'react';\nimport styles from './styles.module.scss';\nimport classNames from 'classnames';\nimport DrawerButton from 'components/Buttons/DrawerButton';\n\ninterface Props {\n  className?: string;\n  counter: number;\n}\n\nconst Counter = ({ counter, className }: Props) => {\n  return (\n    <div className={classNames(styles.root, className)}>\n      <div>Check the Redux Devtools to see the dispatched actions.</div>\n      <a\n        href=\"https://github.com/zalmoxisus/redux-devtools-extension\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        (link)\n      </a>\n      <div className={styles.counter}>{counter}</div>\n      <DrawerButton />\n    </div>\n  );\n};\n\nexport default Counter;\n","import React from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport MainDrawer from '../../components/Drawers/MainDrawer';\nimport Counter from './Counter';\nimport styles from './styles.module.scss';\nimport classNames from 'classnames';\nimport { RootState } from 'store/index';\n\ninterface Props {\n  className?: string;\n}\n\nconst Demo = ({ className }: Props) => {\n  const selectValue = (state: RootState) => state.counter.counter;\n  const value = useSelector(selectValue, shallowEqual);\n\n  return (\n    <div className={classNames(styles.root, className)}>\n      <Counter counter={value} />\n      <MainDrawer />\n    </div>\n  );\n};\n\nexport default Demo;\n","interface Book {\n  url: string;\n  name: string;\n  isbn: string;\n  authors: string[];\n  numberOfPages: number;\n  publisher: string;\n  country: string;\n  mediaType: string;\n  released: Date;\n  characters: string[];\n  povCharacters: string[];\n}\n\nexport interface ApiState {\n  isLoadingBooks: boolean;\n  books: Book[];\n}\n\nexport const GET_BOOKS = 'GET_BOOKS';\nexport const GET_BOOKS_SUCCESS = 'GET_BOOKS_SUCCESS';\nexport const GET_BOOKS_ERROR = 'GET_BOOKS_ERROR';\n\ninterface fetchBooks {\n  type: typeof GET_BOOKS;\n}\n\ninterface getBooksSuccess {\n  type: typeof GET_BOOKS_SUCCESS;\n  payload: Book[];\n}\n\ninterface getBooksError {\n  type: typeof GET_BOOKS_ERROR;\n}\n\nexport type ApiActionTypes = fetchBooks | getBooksSuccess | getBooksError;\n","import axios from 'axios';\nimport cookies from 'js-cookie';\nimport camelcaseKeys from 'camelcase-keys';\n\nconst apiService = {\n  async get(\n    path: string,\n    disableCamelCase?: boolean,\n    fullResponse: boolean = false\n  ) {\n    // const token = cookies.get('token');\n    // if (!token) {\n    //   document.location.reload();\n    // }\n    try {\n      const response = await axios({\n        method: 'get',\n        url: `${path}`\n        // headers: {\n        //   Authorization: `Bearer ${token}`\n        // }\n      });\n      return fullResponse\n        ? response.data\n        : disableCamelCase\n        ? response.data.payload\n        : camelcaseKeys(response.data, { deep: true });\n    } catch (error) {\n      const customError = {\n        code: error !== undefined ? error.response.status : 500,\n        message:\n          error !== undefined\n            ? error.response.data.error\n              ? error.response.data.error\n              : error.response.statusText\n            : 'Internal Server Error'\n      };\n      throw customError;\n    }\n  },\n  async post(path: string, data: any) {\n    const token = cookies.get('token');\n    if (!token) {\n      document.location.reload();\n    }\n    try {\n      const response = await axios({\n        method: 'post',\n        url: `/${path}`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        data\n      });\n      return response.data;\n    } catch (error) {\n      return error.response.data;\n    }\n  },\n  async put(path: string, data: any) {\n    const token = cookies.get('token');\n    if (!token) {\n      document.location.reload();\n    }\n    try {\n      const response = await axios({\n        method: 'put',\n        url: `/${path}`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        data\n      });\n      return response.data;\n    } catch (error) {\n      return error.response.data;\n    }\n  },\n  async delete(path: string, data: any) {\n    const token = cookies.get('token');\n    if (!token) {\n      document.location.reload();\n    }\n    try {\n      const response = await axios({\n        method: 'delete',\n        url: `/${path}`,\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        data\n      });\n      return response.data.payload;\n    } catch (error) {\n      throw new Error(error.response.data.error);\n    }\n  }\n};\n\nexport default apiService;\n","import api from 'services/api';\n\nconst BOOKS_ROUTE = '/api/books';\n\nconst bookService = {\n  async getBooks() {\n    return api.get(`${BOOKS_ROUTE}`);\n  }\n};\n\nexport default bookService;\n","import React from 'react';\nimport styles from './styles.module.scss';\nimport classNames from 'classnames';\n\ninterface Props {\n  name: string;\n  className?: string;\n}\n\nconst Book = ({ name, className }: Props) => {\n  return (\n    <div className={classNames(styles.root, className)}>\n      <div>{name}</div>\n    </div>\n  );\n};\n\nexport default Book;\n","import React from 'react';\n\nconst Spinner = () => <img src=\"assets/images/loader.gif\" alt=\"spinner\" />;\n\nexport default Spinner;\n","import React from 'react';\nimport { fetchBooks } from '../../../store/api/actions';\nimport Book from '../Books';\nimport Spinner from 'components/Spinner';\nimport Button from 'components/Buttons/Button';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport styles from './styles.module.scss';\nimport classNames from 'classnames';\nimport { RootState } from 'store/index';\n\ninterface Props {\n  className?: string;\n}\n\nconst BooksList = ({ className }: Props) => {\n  const dispatch = useDispatch();\n\n  const selectApiState = (state: RootState) => state.api;\n  const { isLoadingBooks, books } = useSelector(selectApiState, shallowEqual);\n\n  const Books = isLoadingBooks ? (\n    <Spinner />\n  ) : (\n    books.map((book) => <Book key={book.url} name={book.name} />)\n  );\n\n  return (\n    <div className={classNames(styles.root, className)}>\n      <div>with React hooks (functional component)</div>\n      <div className={styles.listHeader}>\n        <div className={styles.listTitl}>Books</div>\n        <Button onClick={() => dispatch(fetchBooks())} text=\"Refresh\" />\n      </div>\n      {Books}\n    </div>\n  );\n};\n\nexport default BooksList;\n","import {\n  GET_BOOKS,\n  GET_BOOKS_SUCCESS,\n  GET_BOOKS_ERROR,\n  ApiActionTypes\n} from './types';\n\nimport bookService from '../../services/books';\n\nimport { ThunkDispatch } from 'redux-thunk';\nimport { RootState } from 'store';\n\nexport const fetchBooks = () => {\n  return async (dispatch: ThunkDispatch<RootState, void, ApiActionTypes>) => {\n    dispatch({ type: GET_BOOKS });\n    try {\n      const books = await bookService.getBooks();\n      dispatch({ type: GET_BOOKS_SUCCESS, payload: books });\n    } catch (error) {\n      dispatch({ type: GET_BOOKS_ERROR, payload: error });\n    }\n  };\n};\n","import React from 'react';\nimport BooksList from './BooksList';\nimport styles from './styles.module.scss';\nimport classNames from 'classnames';\n\ninterface Props {\n  className?: string;\n}\n\nconst ApiDemo = ({ className }: Props) => (\n  <div className={classNames(styles.root, className)}>\n    <div className={styles.apiDemoHeader}>API Demo with Redux thunk</div>\n    <div className={styles.apiDemoContent}>\n      <BooksList />\n    </div>\n  </div>\n);\n\nexport default ApiDemo;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport styles from './styles.module.scss';\nimport classNames from 'classnames';\n\ninterface Props {\n  className?: string;\n  onClick: () => void;\n}\n\nconst Menu = ({ className, onClick }: Props, ref: any) => {\n  return (\n    <div ref={ref} className={classNames(styles.root, className)}>\n      <Link onClick={onClick} className={styles.link} to=\"/\">\n        Home\n      </Link>\n      <Link onClick={onClick} className={styles.link} to=\"/demo\">\n        Demo Page\n      </Link>\n      <Link onClick={onClick} className={styles.link} to=\"/apidemo\">\n        API demo\n      </Link>\n    </div>\n  );\n};\nexport default React.forwardRef(Menu);\n","import React, { useState, useRef, useEffect, useLayoutEffect } from 'react';\nimport styles from './styles.module.scss';\nimport classNames from 'classnames';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from '../../components/Header';\n// import Home from '../Home';\n// import Login from '../Login';\nimport Demo from '../Demo';\nimport ApiDemo from 'views/ApiDemo/ApiDemo';\nimport Menu from 'components/Menu';\nimport gsap from 'gsap';\n\ninterface Props {\n  className?: string;\n}\n\nconst App = ({ className }: Props) => {\n  const [isOpen, setisOpen] = useState<boolean>(false);\n\n  const menuRef = useRef(null);\n\n  const showMenu = () => {\n    var tl = gsap.timeline({ repeat: 0, repeatDelay: 1 });\n    tl.to(menuRef.current, { xPercent: 0, duration: 1 });\n  };\n\n  const hideMenu = () => {\n    var tl = gsap.timeline({ repeat: 0, repeatDelay: 1 });\n    tl.to(menuRef.current, { xPercent: -100, duration: 1 });\n  };\n\n  useLayoutEffect(() => {\n    var tl = gsap.timeline();\n    tl.set(menuRef.current, { xPercent: -100 });\n  }, []);\n\n  useEffect(() => {\n    if (!isOpen) hideMenu();\n    else showMenu();\n  }, [isOpen]);\n\n  return (\n    <div className={classNames(styles.root, className)}>\n      <Router>\n        <div onClick={() => setisOpen(true)} className={styles.menu} />\n        <Menu\n          ref={menuRef}\n          className={styles.menuBar}\n          onClick={() => setisOpen(false)}\n        />\n        <Switch>\n          <Route exact path=\"/\" component={Header} />\n          <Route path=\"/apidemo\" component={ApiDemo} />\n          <Route path=\"/demo\" component={Demo} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  CounterState,\n  CounterActionTypes,\n  INCREMENT_COUNTER,\n  DECREMENT_COUNTER,\n  INCREMENT_COUNTER_WITH_VALUE,\n  DECREMENT_COUNTER_WITH_VALUE,\n  SET_COUNTER,\n  RESET_COUNTER\n} from './types';\n\nconst initialState: CounterState = {\n  counter: 0\n};\n\nexport const counterReducer = (\n  state = initialState,\n  action: CounterActionTypes\n): CounterState => {\n  switch (action.type) {\n    case INCREMENT_COUNTER:\n      return { ...state, counter: state.counter + 1 };\n    case DECREMENT_COUNTER:\n      return { ...state, counter: state.counter - 1 };\n    case INCREMENT_COUNTER_WITH_VALUE:\n      return { ...state, counter: state.counter + action.payload };\n    case DECREMENT_COUNTER_WITH_VALUE:\n      return { ...state, counter: state.counter - action.payload };\n    case SET_COUNTER:\n      return { ...state, counter: action.payload };\n    case RESET_COUNTER:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import {\n  DrawerState,\n  DrawerActionTypes,\n  OPEN_DRAWER,\n  CLOSE_DRAWER\n} from './types';\n\nconst initialState: DrawerState = {\n  isOpen: false\n};\n\nexport const drawerReducer = (\n  state = initialState,\n  action: DrawerActionTypes\n): DrawerState => {\n  switch (action.type) {\n    case OPEN_DRAWER:\n      return { ...state, isOpen: true };\n    case CLOSE_DRAWER:\n      return { ...state, isOpen: false };\n    default:\n      return state;\n  }\n};\n","import {\n  ApiState,\n  ApiActionTypes,\n  GET_BOOKS,\n  GET_BOOKS_SUCCESS,\n  GET_BOOKS_ERROR\n} from './types';\n\nconst initialState: ApiState = {\n  isLoadingBooks: false,\n  books: []\n};\n\nexport const apiReducer = (\n  state = initialState,\n  action: ApiActionTypes\n): ApiState => {\n  switch (action.type) {\n    case GET_BOOKS:\n      return { ...state, isLoadingBooks: true, books: initialState.books };\n    case GET_BOOKS_SUCCESS:\n      return { ...state, isLoadingBooks: false, books: action.payload };\n    case GET_BOOKS_ERROR:\n      return { ...state, isLoadingBooks: false };\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { counterReducer } from './counter/reducers';\nimport { drawerReducer } from './drawer/reducers';\nimport { apiReducer } from './api/reducers';\nimport thunk from 'redux-thunk';\nimport { Action } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n  drawer: drawerReducer,\n  api: apiReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './views/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}